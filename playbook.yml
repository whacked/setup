---
- hosts: all
  connection: local
  vars:
      nix_init: '. ~/.nix-profile/etc/profile.d/nix.sh'
  tasks:

  - name: ensure apt cache is up to date
    apt: update_cache=yes
    become: true

  - name: ubuntu/vbox specific utils
    become: true
    package:
        name: "{{ item }}"
        state: latest
    with_items:
        - xfce4
        - xserver-xorg-legacy  # also for WM launch
        - virtualbox-guest-dkms
        - virtualbox-guest-utils
        - virtualbox-guest-x11
        - ttf-anonymous-pro
        - fonts-dejavu-core
        - fonts-dejavu-extra
        - ttf-bitstream-vera
        - fonts-inconsolata

  # fix for window manager launching with non-root
  - lineinfile:
      # NOTE: as of 2.3 this should be `path`;
      # using `dest` because ubuntu is behind
      dest: /etc/X11/Xwrapper.config
      backup: yes
      regexp: '^allowed_users='
      line: 'allowed_users=anybody'
  - lineinfile:
      dest: /etc/X11/Xwrapper.config
      backup: yes
      state: present
      regexp: '^needs_root_rights='
      line: 'needs_root_rights=yes'

  - stat: path=/nix
    register: nixdir

  - name: install nix
    shell: bash -c 'bash <(curl https://nixos.org/nix/install)'
    when: nixdir.stat.exists == False

  # DEPRECATE
  ## manually install packages using nix-env; supersede with config.nix
  #- name: install software
  #  shell: "{{ nix_init }} && nix-env -i {{ item }} 2>>/tmp/install-{{ item }}.log"
  #  with_items:
  #      - tmux
  #      - htop

  - name: install docker
    # see https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository
    become: true
    block:
    - apt: pkg="{{ item }}" state=latest
      with_items:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
    - apt_key:
        id: 0EBFCD88
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - apt: update_cache=yes
      become: true
    - apt: pkg=docker-ce state=present
    - user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes

